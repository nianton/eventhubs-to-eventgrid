{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "eventGridTopicName": {
            "type": "string",
            "defaultValue": "aadb2c_audit",
            "metadata": {
                "description": "The name of the Event Grid custom topic."
            }
        },
        "eventGridSubscriptionName": {
            "type": "string",
            "metadata": {
                "description": "The name of the Event Grid custom topic's subscription."
            }
        },
        "eventGridSubscriptionUrl": {
            "type": "string",
            "metadata": {
                "description": "The webhook URL to send the subscription events to. This URL must be valid and must be prepared to accept the Event Grid webhook URL challenge request. (RequestBin URLs are exempt from this requirement.)"
            }
        },
        "eventHubsSku": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard"
            ]
        },
        "eventHubsSkuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 20,
            "minValue": 0
        },
        "eventHubsAutoInflateEnabled": {
            "type": "bool",
            "defaultValue": true
        },
        "eventHubsMaxThroughputUnits": {
            "type": "int",
            "defaultValue": 5,
            "maxValue": 20,
            "minValue": 0
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location in which the Event Grid resources should be deployed."
            }
        }
    },
    "variables": {
        "suffix":"[substring(uniqueString(subscription().subscriptionId), 0, 6)]",
        "storageName": "[concat('b2caudit', variables('suffix'))]",
        "storageContainerName": "auditlogs",
        "eventHubsNamespaceName": "b2caudit-ehns"
    },
    "resources": [
        {
            "type": "Microsoft.EventHub/namespaces",
            "apiVersion": "2018-01-01-preview",
            "name": "[variables('eventHubsNamespaceName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('eventHubsSku')]",
                "tier": "[parameters('eventHubsSku')]",
                "capacity": "[parameters('eventHubsSkuCapacity')]"
            },
            "properties": {
                "isAutoInflateEnabled": "[parameters('eventHubsAutoInflateEnabled')]",
                "maximumThroughputUnits": "[parameters('eventHubsMaxThroughputUnits')]",
                "zoneRedundant": true
            }
        },
        {
            "name": "[parameters('eventGridTopicName')]",
            "type": "Microsoft.EventGrid/topics",
            "location": "[parameters('location')]",
            "apiVersion": "2018-01-01",
            "properties":{                
            }
        },
        {
            "name": "[concat(parameters('eventGridTopicName'), '/Microsoft.EventGrid/', parameters('eventGridSubscriptionName'))]",
            "type": "Microsoft.EventGrid/topics/providers/eventSubscriptions",
            "location": "[parameters('location')]",
            "apiVersion": "2018-01-01",
            "properties": {
                "destination": {
                    "endpointType": "WebHook",
                    "properties": {
                        "endpointUrl": "[parameters('eventGridSubscriptionUrl')]"
                    }
                },
                "filter": {
                    "includedEventTypes": [
                        "All"
                    ]
                }
            },
            "dependsOn": [
                "[parameters('eventGridTopicName')]"
            ]
        },
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "kind":"StorageV2",
            "location": "[parameters('location')]",
            "sku":{
                "name":"Standard_LRS",
                "tier": "Standard"
            },
            "tags": {
                "displayName": "[variables('storageName')]"
            },
            "properties": {
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "[concat('default/', variables('storageContainerName'))]",
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "dependsOn": [
                        "[variables('storageName')]"
                    ]
                }
            ]
        }
    ],
    "outputs": {
    }
}